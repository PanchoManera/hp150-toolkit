name: Build HP-150 Toolkit Binaries

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false  # No cancelar otros jobs si uno falla
      matrix:
        include:
          - os: macos-latest
            python-version: '3.11'
            artifact-name: 'hp150-toolkit-macos'
            
          - os: windows-latest
            python-version: '3.11'
            artifact-name: 'hp150-toolkit-windows'
            
          - os: ubuntu-latest
            python-version: '3.11'
            artifact-name: 'hp150-toolkit-linux'

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-tk
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
    
    - name: Build executable (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        pyinstaller --onefile --windowed \
          --name="HP150-Toolkit" \
          --add-data="src:src" \
          run_gui.py
          
    - name: Build executable (Windows)
      if: runner.os == 'Windows'
      run: |
        echo "Contenido del directorio:"
        dir
        echo "Contenido de src:"
        dir src
        echo "Probando importación:"
        python -c "import sys; sys.path.insert(0, 'src'); from gui.hp150_gui import HP150ImageManager; print('Import exitoso')"
        echo "Ejecutando PyInstaller:"
        pyinstaller --onefile --console --name="HP150-Toolkit" --paths="src" --hidden-import="gui.hp150_gui" --hidden-import="gui.hp150_gui_extended" --hidden-import="tools.hp150_fat" run_gui.py
          
    - name: Build executable (Linux)
      if: runner.os == 'Linux'
      run: |
        pyinstaller --onefile \
          --name="HP150-Toolkit" \
          --add-data="src:src" \
          run_gui.py
    
    - name: Prepare distribution
      run: |
        mkdir dist-final
        
    - name: Copy files (macOS/Linux)
      if: runner.os != 'Windows'
      run: |
        cp dist/HP150-Toolkit dist-final/
        echo "Run with: ./HP150-Toolkit" > dist-final/HOW_TO_RUN.txt
        echo "Extended mode: ./HP150-Toolkit --extended" >> dist-final/HOW_TO_RUN.txt
        
    - name: Copy files (Windows)
      if: runner.os == 'Windows'
      run: |
        copy dist\HP150-Toolkit.exe dist-final\
        echo Run with: HP150-Toolkit.exe > dist-final\HOW_TO_RUN.txt
        echo Extended mode: HP150-Toolkit.exe --extended >> dist-final\HOW_TO_RUN.txt
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact-name }}
        path: dist-final/
        retention-days: 30
    
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: dist-final/*
        name: "HP-150 Toolkit ${{ github.ref_name }}"
        body: |
          ## HP-150 Toolkit - Release ${{ github.ref_name }}
          
          Binarios disponibles:
          - 🍎 macOS
          - 🪟 Windows 
          - 🐧 Linux
          
          Ejecuta con: `./HP150-Toolkit` o `HP150-Toolkit.exe`
          Modo extendido: agrega `--extended`
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
